# Training Properties
name = "example_name"
seed = 100
model_type = "siren"
iterations = 3000
learning_rate = 8e-5
type = "regression" # "classification" or "regression"
reg_loss_weight = 0.05 # weighting of the regularization loss
use_regularization_loss = true # only relevant for classification

# Loss
L = 0.5
absorption_loss = false

# Model Parameters
n_neurons = 100
hidden_layers = 9
encoding_dim = 4
siren_omega = 1.0

# Epsilon Properties
add_noise = false
noise_scale = 0.001
eps_oversampling = 1
real_min_eps = 1e-3
real_max_eps = 100.0
imag_min_eps = 0.0
imag_max_eps = 5.0

# Grid dimensions
Nx = 1
Ny = 1
N_layers = 8

# TRCWA parameters
TRCWA_L_grid = [[0.1,0.0],[0.0,0.1]] # grid dimension for TRCWA
TRCWA_NG = 11 # Truncation order (actual number might be smaller)

# Target spectra
# To find out which frequencies below points correspond to use nidn.get_frequency_points(cfg)
# This should be from low wavelength to high wavelength
target_reflectance_spectrum = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0]
target_transmittance_spectrum = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
physical_wavelength_range = [1e-6,30e-6]
N_freq = 20